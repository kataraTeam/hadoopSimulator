#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
- set_fact:
    iam_endpoint_api: "{{ cdp_endpoint_url }}/api/v1/iam"

- name: List all users
  uri:
    url: "{{ iam_endpoint_api }}/listUsers"
    method: POST
    headers: 
      Content-Type: application/json
      Cookie: "{{ all_cookies }}"
    body: "{\"pageSize\":500}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: list_users

- set_fact:
    user_to_register_crn: "{{ list_users.json | community.general.json_query(query) }}"
  vars:
    query: "users[?workloadUsername == '{{ classic_cluster.user_to_register }}' ].crn | [0]"

- name: DEBUG - user_to_register_crn
  debug:
    msg: "{{ user_to_register_crn }}"
  when: debug | default(false)



- name: Check connectivity to classic cluster
  uri:
    url: "{{ cdp_endpoint_url }}/classic-clusters/api/cluster-managers?action=check"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body: "{{ lookup('template', 'classic-cluster.json') }}"
    body_format: json
    status_code: [200, 500]
    return_content: yes
    validate_certs: no
  register: classic_cluster_answer
  ignore_errors: true

- name: DEBUG - classic_cluster_answer
  debug:
    msg: "{{ classic_cluster_answer }}"
  when: debug | default(false)

- set_fact:
    cluster_cm_ip: "{{ classic_cluster_answer.json | community.general.json_query(query_id) }}"
  vars:
    query_id: "managerAddress | [0]"

- name: DEBUG - cluster_cm_ip
  debug:
    msg: "{{ cluster_cm_ip }}"
  when: debug | default(false)

- set_fact:
    cluster_name: "{{ classic_cluster_answer.json | community.general.json_query(query_id) }}"
  vars:
    query_id: "name | [0]"

- name: DEBUG - cluster_name
  debug:
    msg: "{{ cluster_name }}"
  when: debug | default(false)


- name: Register a classic cluster
  uri:
    url: "{{ cdp_endpoint_url }}/classic-clusters/api/classic-clusters"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body: "{{ lookup('template', 'register-cluster.json') }}"
    body_format: json
    status_code: [200, 500]
    return_content: yes
    validate_certs: no
  register: register_cluster_answer
  ignore_errors: true

- name: DEBUG - register_cluster_answer
  debug:
    msg: "{{ register_cluster_answer }}"
  when: debug | default(false)